name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            rid: linux-x64
          - os: windows-latest
            rid: win-x64
          - os: macos-latest
            rid: osx-arm64
    name: Build (${{ matrix.rid }})
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      - name: Publish
        run: |
          dotnet publish src/FindLargeFiles.csproj -c Release -r ${{ matrix.rid }} --self-contained true -p:PublishAot=true -o publish-${{ matrix.rid }}
      - name: Archive
        if: matrix.os != 'windows-latest'
        run: |
          tar -czf git-find-large-files-${{ matrix.rid }}-${{ github.ref_name }}.tar.gz -C publish-${{ matrix.rid }} git-find-large-files
      - name: Archive (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          Compress-Archive -Path publish-${{ matrix.rid }}\git-find-large-files.exe -DestinationPath git-find-large-files-${{ matrix.rid }}-${{ github.ref_name }}.zip
        shell: pwsh
      - name: Generate SHA256 (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sha256sum git-find-large-files-${{ matrix.rid }}-${{ github.ref_name }}.tar.gz > git-find-large-files-${{ matrix.rid }}-${{ github.ref_name }}.tar.gz.sha256
      - name: Generate SHA256 (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          shasum -a 256 git-find-large-files-${{ matrix.rid }}-${{ github.ref_name }}.tar.gz > git-find-large-files-${{ matrix.rid }}-${{ github.ref_name }}.tar.gz.sha256
      - name: Generate SHA256 (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          Get-FileHash git-find-large-files-${{ matrix.rid }}-${{ github.ref_name }}.zip -Algorithm SHA256 | ForEach-Object { $_.Hash + ' *git-find-large-files-${{ matrix.rid }}-${{ github.ref_name }}.zip' } | Set-Content git-find-large-files-${{ matrix.rid }}-${{ github.ref_name }}.zip.sha256
        shell: pwsh
      # Upload only the files that exist for each OS
      - name: Upload Artifact (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: git-find-large-files-${{ matrix.rid }}-${{ github.ref_name }}
          path: |
            git-find-large-files-${{ matrix.rid }}-${{ github.ref_name }}.tar.gz
            git-find-large-files-${{ matrix.rid }}-${{ github.ref_name }}.tar.gz.sha256
      - name: Upload Artifact (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: git-find-large-files-${{ matrix.rid }}-${{ github.ref_name }}
          path: |
            git-find-large-files-${{ matrix.rid }}-${{ github.ref_name }}.tar.gz
            git-find-large-files-${{ matrix.rid }}-${{ github.ref_name }}.tar.gz.sha256
      - name: Upload Artifact (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: git-find-large-files-${{ matrix.rid }}-${{ github.ref_name }}
          path: |
            git-find-large-files-${{ matrix.rid }}-${{ github.ref_name }}.zip
            git-find-large-files-${{ matrix.rid }}-${{ github.ref_name }}.zip.sha256
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/**/git-find-large-files-*.tar.gz
            artifacts/**/git-find-large-files-*.zip
            artifacts/**/git-find-large-files-*.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Update Homebrew tap formula
        run: |
          git clone https://x-access-token:${{ secrets.TAP_PUSH_TOKEN }}@github.com/prosser/homebrew-git-find-large-files.git taprepo
          cp homebrew-git-find-large-files/git-find-large-files.rb taprepo/
          cd taprepo
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add git-find-large-files.rb
          git commit -m "Update formula for ${{ github.ref_name }}" || echo "No changes to commit"
          git push
      - name: Update Homebrew formula version and sha256
        run: |
          FORMULA_PATH="homebrew-git-find-large-files/git-find-large-files.rb"
          VERSION="${GITHUB_REF_NAME#v}"
          ASSET="git-find-large-files-osx-arm64-${GITHUB_REF_NAME}.tar.gz"
          SHA256=$(cat artifacts/**/${ASSET}.sha256 | awk '{print $1}')
          sed -i.bak -E "s|url \".*\"|url \"https://github.com/prosser/git-find-large-files/releases/download/${GITHUB_REF_NAME}/${ASSET}\"|g" $FORMULA_PATH
          sed -i.bak -E "s|version \".*\"|version \"${VERSION}\"|g" $FORMULA_PATH
          sed -i.bak -E "s|sha256 \".*\"|sha256 \"${SHA256}\"|g" $FORMULA_PATH
          rm $FORMULA_PATH.bak
